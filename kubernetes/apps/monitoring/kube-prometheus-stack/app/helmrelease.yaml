---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 15m
  timeout: 10m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 61.3.2
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    fullnameOverride: prometheus
    alertmanager:
      fullnameOverride: alertmanager
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: "null"
          - name: "pagerduty"
            pagerduty_configs:
              - service_key: ${PAGERDUTY_KEY}
          - name: dead-mans-switch
            webhook_configs:
              - url: ${HEALTHCHECKS_IO_URL}
        route:
          group_by: ["alertname", "job"]
          group_wait: 1m
          group_interval: 10m
          repeat_interval: 12h
          receiver: "pagerduty"
          routes:
            - receiver: dead-mans-switch
              group_wait: 0s
              group_interval: 5m
              repeat_interval: 5m
              match:
                alertname: "Watchdog"
            - receiver: "null"
              matchers:
                - alertname =~ "InfoInhibitor"
            - receiver: "pagerduty"
              matchers:
                - severity=~"warning|critical|page"
              continue: true
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "true"
          hajimari.io/appName: "Alert Manager"
          hajimari.io/icon: "alert-decagram"
          hajimari.io/group: "monitoring"
        hosts:
          - "alert-manager.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "alert-manager.${SECRET_DOMAIN}"
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 1Gi
    nodeExporter:
      serviceMonitor:
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      rbac:
        extraRules:
          - apiGroups:
              - source.toolkit.fluxcd.io
              - kustomize.toolkit.fluxcd.io
              - helm.toolkit.fluxcd.io
              - notification.toolkit.fluxcd.io
              - image.toolkit.fluxcd.io
            resources:
              - gitrepositories
              - buckets
              - helmrepositories
              - helmcharts
              - ocirepositories
              - kustomizations
              - helmreleases
              - alerts
              - providers
              - receivers
              - imagerepositories
              - imagepolicies
              - imageupdateautomations
            verbs: ["list", "watch"]
      customResourceState:
        enabled: true
        config:
          spec:
            resources:
              - groupVersionKind:
                  group: kustomize.toolkit.fluxcd.io
                  version: v1
                  kind: Kustomization
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a GitOps Toolkit resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                    labelsFromPath:
                      exported_namespace: [metadata, namespace]
                      ready: [status, conditions, "[type=Ready]", status]
                      suspended: [spec, suspend]
                      revision: [status, lastAppliedRevision]
                      source_name: [spec, sourceRef, name]
              - groupVersionKind:
                  group: helm.toolkit.fluxcd.io
                  version: v2beta2
                  kind: HelmRelease
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a GitOps Toolkit resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                    labelsFromPath:
                      exported_namespace: [metadata, namespace]
                      ready: [status, conditions, "[type=Ready]", status]
                      suspended: [spec, suspend]
                      revision: [status, lastAppliedRevision]
                      chart_name: [spec, chart, spec, chart]
                      chart_source_name: [spec, chart, spec, sourceRef, name]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1
                  kind: GitRepository
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a GitOps Toolkit resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                    labelsFromPath:
                      exported_namespace: [metadata, namespace]
                      ready: [status, conditions, "[type=Ready]", status]
                      suspended: [spec, suspend]
                      revision: [status, artifact, revision]
                      url: [spec, url]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1beta2
                  kind: Bucket
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a GitOps Toolkit resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                    labelsFromPath:
                      exported_namespace: [metadata, namespace]
                      ready: [status, conditions, "[type=Ready]", status]
                      suspended: [spec, suspend]
                      revision: [status, artifact, revision]
                      endpoint: [spec, endpoint]
                      bucket_name: [spec, bucketName]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1beta2
                  kind: HelmRepository
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a GitOps Toolkit resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                    labelsFromPath:
                      exported_namespace: [metadata, namespace]
                      ready: [status, conditions, "[type=Ready]", status]
                      suspended: [spec, suspend]
                      revision: [status, artifact, revision]
                      url: [spec, url]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1beta2
                  kind: HelmChart
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a GitOps Toolkit resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                    labelsFromPath:
                      exported_namespace: [metadata, namespace]
                      ready: [status, conditions, "[type=Ready]", status]
                      suspended: [spec, suspend]
                      revision: [status, artifact, revision]
                      chart_name: [spec, chart]
                      chart_version: [spec, version]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1beta2
                  kind: OCIRepository
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a GitOps Toolkit resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                    labelsFromPath:
                      exported_namespace: [metadata, namespace]
                      ready: [status, conditions, "[type=Ready]", status]
                      suspended: [spec, suspend]
                      revision: [status, artifact, revision]
                      url: [spec, url]
              - groupVersionKind:
                  group: notification.toolkit.fluxcd.io
                  version: v1beta3
                  kind: Alert
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a GitOps Toolkit resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                    labelsFromPath:
                      exported_namespace: [metadata, namespace]
                      suspended: [spec, suspend]
              - groupVersionKind:
                  group: notification.toolkit.fluxcd.io
                  version: v1beta3
                  kind: Provider
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a GitOps Toolkit resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                    labelsFromPath:
                      exported_namespace: [metadata, namespace]
                      suspended: [spec, suspend]
              - groupVersionKind:
                  group: notification.toolkit.fluxcd.io
                  version: v1
                  kind: Receiver
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a GitOps Toolkit resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                    labelsFromPath:
                      exported_namespace: [metadata, namespace]
                      ready: [status, conditions, "[type=Ready]", status]
                      suspended: [spec, suspend]
                      webhook_path: [status, webhookPath]
              - groupVersionKind:
                  group: image.toolkit.fluxcd.io
                  version: v1beta2
                  kind: ImageRepository
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a GitOps Toolkit resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                    labelsFromPath:
                      exported_namespace: [metadata, namespace]
                      ready: [status, conditions, "[type=Ready]", status]
                      suspended: [spec, suspend]
                      image: [spec, image]
              - groupVersionKind:
                  group: image.toolkit.fluxcd.io
                  version: v1beta2
                  kind: ImagePolicy
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a GitOps Toolkit resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                    labelsFromPath:
                      exported_namespace: [metadata, namespace]
                      ready: [status, conditions, "[type=Ready]", status]
                      suspended: [spec, suspend]
                      source_name: [spec, imageRepositoryRef, name]
              - groupVersionKind:
                  group: image.toolkit.fluxcd.io
                  version: v1beta1
                  kind: ImageUpdateAutomation
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a GitOps Toolkit resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [metadata, name]
                    labelsFromPath:
                      exported_namespace: [metadata, namespace]
                      ready: [status, conditions, "[type=Ready]", status]
                      suspended: [spec, suspend]
                      source_name: [spec, sourceRef, name]
    prometheus-node-exporter:
      fullnameOverride: node-exporter
    grafana:
      fullnameOverride: grafana
      enabled: true
      forceDeployDashboards: true
      defaultDashboardsTimezone: "Europe/Stockholm"
      folderAnnotation: grafana_folder
      env:
        GF_EXPLORE_ENABLED: true
      grafana.ini:
        users:
          viewers_can_edit: false
        auth.anonymous:
          enabled: true
          org_role: Viewer
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: 'default'
              orgId: 1
              folder: ''
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/default
      plugins:
        - grafana-piechart-panel
      dashboards:
        default:
          nodeExporter:
            gnetId: 1860
            revision: 37
            datasource: "Prometheus"
      additionalDataSources:
        - name: Loki
          editable: false
          orgId: 1
          type: loki
          url: http://loki.logging.svc.cluster.local:3100
          version: 1
        - name: AlertManager
          type: alertmanager
          access: proxy
          url: http://alertmanager-operated.monitoring.svc.cluster.local:9093
          jsonData:
            implementation: "prometheus"
      sidecar:
        dashboards:
          enabled: true
          searchNamespace: ALL
          folderAnnotation: grafana_folder
          provider:
            foldersFromFilesStructure: true
        datasources:
          enabled: true
          searchNamespace: ALL
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "true"
          hajimari.io/appName: "Grafana"
          hajimari.io/icon: "monitor-dashboard"
          hajimari.io/group: "monitoring"
        hosts:
          - "grafana.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "grafana.${SECRET_DOMAIN}"
    prometheusOperator:
      configReloaderCpu: 0
    prometheus:
      fullnameOverride: prometheus
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "true"
          hajimari.io/appName: "Prometheus"
          hajimari.io/icon: "database-search"
          hajimari.io/group: "monitoring"
        hosts:
          - "prometheus.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "prometheus.${SECRET_DOMAIN}"
      prometheusSpec:
        additionalScrapeConfigs:
          - job_name: node-exporter
            static_configs:
              - targets:
                  - 192.168.100.103:9100
        retention: 15d
        resources:
          requests:
            cpu: 175m
            memory: 1Gi
          limits:
            cpu: 350m
            memory: 2Gi
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              resources:
                requests:
                  storage: 25Gi
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/hostname
                      operator: NotIn
                      values:
                        - cn4.lan
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeProxy:
      enabled: false
    kubeApiServer:
      enabled: false
