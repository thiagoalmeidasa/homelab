---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jackett
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: linuxserver/jackett
      tag: 0.22.586

    env:
      TZ: ${TIMEZONE}
      PUID: 1000
      PGID: 1000

    service:
      main:
        ports:
          http:
            port: 9117

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: ${LOCAL_SUBNETS}
          hajimari.io/enable: "true"
          hajimari.io/icon: "download-box"
        hosts:
          - host: &host "jackett.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    probes:
      liveness:
        enabled: true
        custom: true
        spec:
          exec:
            command:
              - /usr/bin/env
              - bash
              - -c
              - curl --fail localhost:9117/health
          failureThreshold: 5
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10

    podSecurityContext:
      supplementalGroups:
        - 1000

    persistence:
      config:
        enabled: true
        mountPath: /config
        type: custom
        volumeSpec:
          nfs:
            server: "${NFS_SERVER}"
            path: "${NFS_KUBERNETES}/jackett"

      torrents:
        enabled: true
        mountPath: /torrents
        type: custom
        volumeSpec:
          nfs:
            server: "${NFS_SERVER}"
            path: "${NFS_MEDIA}/torrents"

    resources:
      requests:
        cpu: 20m
        memory: 75Mi
      limits:
        memory: 256Mi
