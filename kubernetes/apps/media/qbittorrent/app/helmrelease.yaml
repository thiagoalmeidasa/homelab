---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      qbittorrent:
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: {type: RuntimeDefault}
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/qbittorrent
              tag: 5.0.0@sha256:4ba2360b71b95afe7d2b4459c54e5146ed682f37a1c1703eba0f29684636de50
            env:
              QBT_Preferences__WebUI__LocalHostAuth: false
              QBT_Preferences__WebUI__AlternativeUIEnabled: false
              QBT_Preferences__WebUI__AuthSubnetWhitelistEnabled: true
              QBT_Preferences__WebUI__AuthSubnetWhitelist: ${LOCAL_SUBNETS}
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /api/v2/app/version
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                cpu: 500m
                memory: 2Gi
    service:
      app:
        controller: qbittorrent
        ports:
          http:
            port: *port
    ingress:
      app:
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: ${LOCAL_SUBNETS}
          hajimari.io/enable: "true"
          hajimari.io/icon: simple-icons:qbittorrent
        hosts:
          - host: qb.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        accessMode: ReadWriteOnce
        enabled: true
        type: persistentVolumeClaim
        storageClass: longhorn
        size: 500Mi
        retain: true
        globalMounts:
          - path: /config
      downloads:
        type: nfs
        server: "${NFS_SERVER}"
        path: "${NFS_MEDIA}/downloads"
        globalMounts:
          - path: "/media/downloads"
      downloading:
        type: nfs
        server: "${NFS_SERVER}"
        path: "${NFS_MEDIA}/downloading"
        globalMounts:
          - path: "/media/downloading"
      movies:
        type: nfs
        server: "${NFS_SERVER}"
        path: "${NFS_MEDIA}/movies"
        globalMounts:
          - path: "/media/movies"
      tvshows:
        type: nfs
        server: "${NFS_SERVER}"
        path: "${NFS_MEDIA}/tvshows"
        globalMounts:
          - path: "/media/tvshows"
