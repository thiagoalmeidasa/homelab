---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: &namespace media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.15.0.9412@sha256:3d922f5f80935c1aadbe49597cb4cd509e2890ca0c01d6778ac54825012fdde4
            env:
              COMPlus_EnableDiagnostics: "0"
              RADARR__APPLICATION_URL: "https://radarr.${SECRET_DOMAIN}"
              RADARR__AUTH__APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: radarr-secret
                    key: RADARR__API_KEY
              RADARR__INSTANCE_NAME: Radarr
              RADARR__LOG_LEVEL: info
              RADARR__PORT: &port 7878
            envFrom:
              - secretRef:
                  name: radarr-secret
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 10m
                memory: 200Mi
              limits:
                cpu: 200m
                memory: 1.5Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
    service:
      app:
        controller: radarr
        ports:
          http:
            port: *port
    ingress:
      app:
        enabled: true
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: ${LOCAL_SUBNETS}
          hajimari.io/enable: "true"
          hajimari.io/icon: "filmstrip"
        hosts:
          - host: &host radarr.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        storageClass: longhorn
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 2Gi
        labels:
          recurring-job-group.longhorn.io/backup: enabled
      downloads:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: "${NFS_MEDIA}/downloads"
        globalMounts:
          - path: /downloads
      movies:
        enabled: true
        type: nfs
        server: ${NFS_SERVER}
        path: "${NFS_MEDIA}/movies"
        globalMounts:
          - path: /movies
