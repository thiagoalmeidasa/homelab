---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: n8n
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  values:
    controllers:
      n8n:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          app:
            image:
              repository: ghcr.io/n8n-io/n8n
              tag: 1.118.1@sha256:cf74d4ebe7dca858c390ee317b9a4f554ea57f0444b2d760f6d69e4f18d5d312
            env:
              DB_SQLITE_VACUUM_ON_STARTUP: true
              DB_SQLITE_POOL_SIZE: 3
              N8N_RUNNERS_ENABLED: true
              EXECUTIONS_DATA_PRUNE: true
              EXECUTIONS_DATA_MAX_AGE: 7
              EXECUTIONS_DATA_PRUNE_MAX_COUNT: 50000
              GENERIC_TIMEZONE: ${TIMEZONE}
              N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: false
              N8N_PROTOCOL: "https"
              N8N_PORT: &port 8080
              N8N_HOST: &hostName n8n.${PUBLIC_DOMAIN}
              N8N_LOG_LEVEL: info
              N8N_LOG_OUTPUT: console
              N8N_PROXY_HOPS: 1
            envFrom:
              - secretRef:
                  name: n8n-secret
            resources:
              requests:
                cpu: 5m
                memory: 128Mi
              limits:
                memory: 2Gi

    service:
      app:
        ports:
          http:
            port: *port

    persistence:
      data:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        retain: true
        size: 10Gi
        storageClass: longhorn
        globalMounts:
          - path: /home/node/.n8n
    ingress:
      app:
        enabled: true
        className: nginx
        hosts:
          - host: n8n.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls: []
      webhook:
        enabled: true
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.${PUBLIC_DOMAIN}"

        hosts:
          - host: *hostName
            paths:
              - path: /webhook
                service:
                  identifier: app
                  port: http
        tls: []
