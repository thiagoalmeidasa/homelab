---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app affine
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  interval: 30m
  maxHistory: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      affine:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          affine-migration:
            image:
              repository: ghcr.io/toeverything/affine
              tag: 0.24.2@sha256:cc95ed65647139acddc9b62f12c46572a91e8b4993573e58c6f62d2e848dd84a
            command: ['sh', '-c', 'node ./scripts/self-host-predeploy.js']
            env:
              AFFINE_INDEXER_ENABLED: false
            envFrom: &envFrom
              - secretRef:
                  name: affine-secret

        containers:
          app:
            image:
              repository: ghcr.io/toeverything/affine
              tag: 0.24.2@sha256:cc95ed65647139acddc9b62f12c46572a91e8b4993573e58c6f62d2e848dd84a
            env:
              TZ: "${TIMEZONE:=Etc/UTC}"
              NODE_ENV: production
              # Server configuration
              PORT: &port "3010"
              AFFINE_INDEXER_ENABLED: false
              # Authentication
              OAUTH_EMAIL_LOGIN: "false"
              # Storage
              DB_DATA_LOCATION: /data/database
              UPLOAD_LOCATION: /data/uploads
              CONFIG_LOCATION: /data/config
            envFrom: *envFrom
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 2Gi
    # Ask for rootless container
    # defaultPodOptions:
    #   securityContext:
    #     runAsUser: 1000
    #     runAsGroup: 1000
    #     fsGroup: 1000
    #     fsGroupChangePolicy: "OnRootMismatch"
    #     seccompProfile: {type: RuntimeDefault}
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    ingress:
      app:
        enabled: true
        className: nginx
        annotations:
          hajimari.io/enable: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/upstream-hash-by: "$client_ip"
        hosts:
          - host: &domain notes.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *domain
      public:
        enabled: true
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.${PUBLIC_DOMAIN}"
          hajimari.io/enable: "false"
        hosts:
          - host: &public-domain notes.${PUBLIC_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *public-domain
    persistence:
      data:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        retain: true
        size: 10Gi
        storageClass: longhorn
        globalMounts:
          - path: /data
